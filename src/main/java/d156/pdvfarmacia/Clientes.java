/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package d156.pdvfarmacia;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import DAO.ClienteDAO;
import Model.Cliente;

/**
 * Classe representa a classe de consulta de clientes no banco de dados e a classe de inserção de clientes no banco de dados.
 * @author everyone
 * @see ClienteDAO
 */

public class Clientes extends javax.swing.JFrame {

    /**
     * Creates new form Clientes
     */
    public Clientes() {
        initComponents();
        try {
            carregarJTable();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar a tabela de clientes");
            e.printStackTrace();
        }
    }

    public void carregarJTable() throws SQLException {
        DefaultTableModel tmClientes = new DefaultTableModel();
        tmClientes.setRowCount(0);
        tmClientes.addColumn("Código");	
        tmClientes.addColumn("Nome");
        tmClientes.addColumn("CPF");
        tmClientes.addColumn("Data de Nascimento");
        tmClientes.addColumn("Email");
        tmClientes.addColumn("Sexo");
        tmClientes.addColumn("Estado Civil");
        tmClientes.addColumn("Endereço");
        tmClientes.addColumn("Número");
        tmClientes.addColumn("CEP");
        tmClientes.addColumn("Complemento");
        jTblClientes.setModel(tmClientes);
        List<Cliente> clientes = new ArrayList<Cliente>();
        clientes = ClienteDAO.consultar();
        for (Cliente cliente : clientes) {
            tmClientes.addRow(new Object[]{
                cliente.getId_cliente(),
                cliente.getNome(),
                cliente.getCpf(),
                cliente.getDataNascimento(),
                cliente.getEmail(),
                cliente.getSexo(),
                cliente.getEstadoCivil(),
                cliente.getEndereco(),
                cliente.getNumero(),
                cliente.getCep(),
                cliente.getComplemento()
            });
        }
    }

    private void carregarJTable(ArrayList<Cliente> clientes){
        DefaultTableModel tmClientes = new DefaultTableModel();
        tmClientes.setRowCount(0);
        tmClientes.addColumn("Código");	
        tmClientes.addColumn("Nome");
        tmClientes.addColumn("CPF");
        tmClientes.addColumn("Data de Nascimento");
        tmClientes.addColumn("Email");
        tmClientes.addColumn("Sexo");
        tmClientes.addColumn("Estado Civil");
        tmClientes.addColumn("Endereço");
        tmClientes.addColumn("Número");
        tmClientes.addColumn("CEP");
        tmClientes.addColumn("Complemento");
        jTblClientes.setModel(tmClientes);
        if(clientes == null || clientes.isEmpty()){
            return;
        }
        for (Cliente aux : clientes) {
            tmClientes.addRow(new Object[]{
                aux.getId_cliente(),
                aux.getNome(),
                aux.getCpf(),
                aux.getDataNascimento(),
                aux.getEmail(),
                aux.getSexo(),
                aux.getEstadoCivil(),
                aux.getEndereco(),
                aux.getNumero(),
                aux.getCep(),
                aux.getComplemento()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBuscar = new javax.swing.JButton();
        txtNome = new javax.swing.JFormattedTextField();
        btnAlterar = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblClientes = new javax.swing.JTable();
        btnDeletar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtCPF = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consulta de Clientes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("AppleGothic", 1, 24))); // NOI18N

        btnBuscar.setText("Buscar");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnBuscar.setName(""); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtNome.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtNome.setName(""); // NOI18N
        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAlterar.setName(""); // NOI18N
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCadastrar.setName(""); // NOI18N
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setName(""); // NOI18N

        jTblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", null, null, null, null, null, null, null, null},
                {"", "", "", null, null, null, null, null, null, null, null},
                {"", "", "", null, null, null, null, null, null, null, null},
                {"", "", "", null, null, null, null, null, null, null, null},
                {"", "", "", null, null, null, null, null, null, null, null},
                {"", "", "", null, null, null, null, null, null, null, null},
                {"", "", "", null, null, null, null, null, null, null, null},
                {"", "", "", null, null, null, null, null, null, null, null},
                {"", "", "", null, null, null, null, null, null, null, null},
                {"", "", "", null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código ", "Nome", "CPF", "Data de Nascimento", "Email", "Sexo", "Estado Civil", "Endereço", "Número", "CEP", "Complemento"
            }
        ));
        jScrollPane1.setViewportView(jTblClientes);

        btnDeletar.setText("Deletar");
        btnDeletar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnDeletar.setName(""); // NOI18N
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        jLabel2.setText("CPF:");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel2.setName(""); // NOI18N

        jLabel1.setText("Nome:");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel1.setName(""); // NOI18N

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPF.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtCPF.setName(""); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 827, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeletar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
       CadastroCliente janelaModal = new CadastroCliente();
        janelaModal.setVisible(true);
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTblClientes.getModel();
        int linhaSelecionada = jTblClientes.getSelectedRow();
        if(linhaSelecionada >= 0) {
            Cliente cliente = new Cliente();
            setClienteComValoresDaLinha(cliente, modelo, linhaSelecionada);
            CadastroCliente janelaModal = new CadastroCliente(cliente);
            janelaModal.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um cliente para alterar");
        }
        try {
            carregarJTable();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar a tabela"+ex);
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void setClienteComValoresDaLinha(Cliente cliente, DefaultTableModel modelo, int linhaSelecionada) {
        cliente.setId_cliente(Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString()));
        cliente.setNome(modelo.getValueAt(linhaSelecionada, 1).toString());
        cliente.setCpf(modelo.getValueAt(linhaSelecionada, 2).toString());
        cliente.setDataNascimento(java.sql.Date.valueOf(modelo.getValueAt(linhaSelecionada, 3).toString()));
        cliente.setEmail(modelo.getValueAt(linhaSelecionada, 4).toString());
        cliente.setSexo(modelo.getValueAt(linhaSelecionada, 5).toString());
        cliente.setEstadoCivil(modelo.getValueAt(linhaSelecionada, 6).toString());
        cliente.setEndereco(modelo.getValueAt(linhaSelecionada, 7).toString());
        cliente.setNumero(Integer.parseInt(modelo.getValueAt(linhaSelecionada, 8).toString()));
        cliente.setCep(modelo.getValueAt(linhaSelecionada, 9).toString());
        cliente.setComplemento(modelo.getValueAt(linhaSelecionada, 10).toString());
    }

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String cpf = txtCPF.getText().replace(".", "").replace("-", "").replace(" ", "");
        ArrayList<Cliente> clientes = new ArrayList<>();

        if(txtNome.getText().length() > 0 && cpf != ""){//nome e cpf
            try {
                clientes = ClienteDAO.consultar(txtNome.getText(), cpf);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erro ao consultar cliente\n" + e.getMessage());
                e.printStackTrace();
            }
        }else if(txtNome.getText().length() > 0){//nome
            try {
                clientes = ClienteDAO.consultarNOME(txtNome.getText());
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erro ao consultar cliente\n" + e.getMessage());
                e.printStackTrace();
            }
        }else if(cpf != ""){//cpf
            try {
                clientes = ClienteDAO.consultarClientesCPF(cpf);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erro ao consultar cliente\n" + e.getMessage());
                e.printStackTrace();
            }
        }else{//nenhum
            try {
                clientes = ClienteDAO.consultar();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erro ao consultar cliente\n" + e.getMessage());
                e.printStackTrace();
            }
        }
        carregarJTable(clientes);
        //limnpar campos
        txtNome.setText("");
        txtCPF.setText("");
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTblClientes.getModel();
        int linhas_Selecionadas = jTblClientes.getSelectedRowCount();
        if(linhas_Selecionadas == 0){
            JOptionPane.showMessageDialog(null, "Selecione uma linha para deletar");
            return;
        }
        int opcao = JOptionPane.showConfirmDialog(null, "Deseja deletar o(s) registro(s) selecionado(s)?", "Atenção", JOptionPane.YES_NO_OPTION);
        if(opcao == JOptionPane.NO_OPTION){
            return;
        }
        for(int i = 0; i < linhas_Selecionadas; i++){
            Cliente cliente = new Cliente();
            setClienteComValoresDaLinha(cliente, modelo, jTblClientes.getSelectedRow());
            try {
                ClienteDAO.deletar(cliente.getId_cliente());
                JOptionPane.showMessageDialog(null, "Registro(s) deletado(s) com sucesso");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erro ao deletar o registro");
                e.printStackTrace();
            }
            modelo.removeRow(jTblClientes.getSelectedRow());
        }
        
    }//GEN-LAST:event_btnDeletarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblClientes;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JFormattedTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
